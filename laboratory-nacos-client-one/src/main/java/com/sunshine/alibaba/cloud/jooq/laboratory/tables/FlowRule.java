/*
 * This file is generated by jOOQ.
 */
package com.sunshine.alibaba.cloud.jooq.laboratory.tables;


import com.sunshine.alibaba.cloud.jooq.laboratory.Indexes;
import com.sunshine.alibaba.cloud.jooq.laboratory.Keys;
import com.sunshine.alibaba.cloud.jooq.laboratory.SpringCloudAlibabaLaboratory;
import com.sunshine.alibaba.cloud.jooq.laboratory.tables.records.FlowRuleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlowRule extends TableImpl<FlowRuleRecord> {

    private static final long serialVersionUID = 1904407748;

    /**
     * The reference instance of <code>spring_cloud_alibaba_laboratory.flow_rule</code>
     */
    public static final FlowRule FLOW_RULE = new FlowRule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FlowRuleRecord> getRecordType() {
        return FlowRuleRecord.class;
    }

    /**
     * The column <code>spring_cloud_alibaba_laboratory.flow_rule.id</code>.
     */
    public final TableField<FlowRuleRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>spring_cloud_alibaba_laboratory.flow_rule.flow_rule</code>.
     */
    public final TableField<FlowRuleRecord, String> FLOW_RULE_ = createField("flow_rule", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>spring_cloud_alibaba_laboratory.flow_rule</code> table reference
     */
    public FlowRule() {
        this(DSL.name("flow_rule"), null);
    }

    /**
     * Create an aliased <code>spring_cloud_alibaba_laboratory.flow_rule</code> table reference
     */
    public FlowRule(String alias) {
        this(DSL.name(alias), FLOW_RULE);
    }

    /**
     * Create an aliased <code>spring_cloud_alibaba_laboratory.flow_rule</code> table reference
     */
    public FlowRule(Name alias) {
        this(alias, FLOW_RULE);
    }

    private FlowRule(Name alias, Table<FlowRuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private FlowRule(Name alias, Table<FlowRuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FlowRule(Table<O> child, ForeignKey<O, FlowRuleRecord> key) {
        super(child, key, FLOW_RULE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringCloudAlibabaLaboratory.SPRING_CLOUD_ALIBABA_LABORATORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FLOW_RULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FlowRuleRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_FLOW_RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FlowRuleRecord> getPrimaryKey() {
        return Keys.KEY_FLOW_RULE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FlowRuleRecord>> getKeys() {
        return Arrays.<UniqueKey<FlowRuleRecord>>asList(Keys.KEY_FLOW_RULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowRule as(String alias) {
        return new FlowRule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowRule as(Name alias) {
        return new FlowRule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FlowRule rename(String name) {
        return new FlowRule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FlowRule rename(Name name) {
        return new FlowRule(name, null);
    }
}
